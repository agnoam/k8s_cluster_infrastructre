# Before deploying it be your wanted node labeled with 
# `elasticsearch_data_node: true` or any other label.
# In case you are changing the label, don't forget to change `nodeSelector:` too

apiVersion: "apps/v1"
kind: "Deployment"

metadata:
  name: "elasticsearch-node-specific"

spec:
  selector:
    matchLabels:
      app: "elasticsearch-node-specific"

  template:
    metadata:
      # namespace: "infrastructure"
      labels:
        app: "elasticsearch-node-specific"

    spec:
      # In case we want to specify specific node to run our deployments on
      # N.B - All the body of nodeSelector is the label
      # Like:
      # nodeSelector:
      #   <your-label>
      nodeSelector:
        elasticsearch_data_node: "true" # <node-label>

      volumes:
        - name: "elasticsearch-local-storage"
          persistentVolumeClaim:
            claimName: "elasticsearch-hostpath-claim"
      
      securityContext:
        fsGroup: 1000
        runAsUser: 1000

      containers:
        - name: "elasticsearch-node-specific"
          image: "elasticsearch:7.13.2"
          
          securityContext:
            privileged: true

          env:
            - name: "xpack.security.enabled"
              value: 'false'
            - name: "discovery.type"
              value: "single-node"

          ports:
            - containerPort: 9200
            - containerPort: 9300

          volumeMounts:
            - mountPath: "/usr/share/elasticsearch/data"
              name: "elasticsearch-local-storage"

---

apiVersion: "v1"
kind: "Service"

metadata:
  name: "elasticsearch-service"

spec:
  selector:
    app: "elasticsearch-node-specific"
  
  ports:
    - protocol: "TCP"
      name: "rest"
      port: 9200
      targetPort: 9200
      nodePort: 30000

    - protocol: "TCP"
      name: "inter-node"
      port: 9300
      targetPort: 9300
      nodePort: 30001

  type: "NodePort"
